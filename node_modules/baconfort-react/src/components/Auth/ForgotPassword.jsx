import React, { useState } from 'react';
import { authAPI } from '../../services/api';
import './ForgotPassword.css';

const ForgotPassword = ({ isOpen, onClose }) => {
  console.log('üîç FORGOTPASSWORD: Component rendered with isOpen:', isOpen);
  
  const [email, setEmail] = useState('');
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState('');
  const [error, setError] = useState('');
  const [step, setStep] = useState('email'); // 'email' | 'success'

  const handleSubmit = async (e) => {
    e.preventDefault();
    e.stopPropagation();
    
    console.log('üîç FORGOT PASSWORD: Submit triggered');
    console.log('üìß Email:', email);
    
    if (!email) {
      console.log('‚ùå No email provided');
      setError('Por favor, ingresa tu email');
      return;
    }

    console.log('üöÄ STARTING: Setting loading to true');
    setLoading(true);
    setError('');
    setMessage('');

    console.log('üì° Calling authAPI.forgotPassword...');

    try {
      const response = await authAPI.forgotPassword(email);
      console.log('‚úÖ API Response:', response);
      
      if (response.success) {
        console.log('üéâ Success! Setting message and step');
        setMessage(response.message);
        setStep('success');
        
        // En desarrollo, mostrar el token para facilitar testing
        if (response.resetToken) {
          console.log('üîë Token de reseteo (desarrollo):', response.resetToken);
          setMessage(prev => `${prev}\n\nToken de desarrollo: ${response.resetToken}`);
        }
      } else {
        console.log('‚ùå API returned success=false:', response);
        setError(response.error || 'Error desconocido');
      }
    } catch (err) {
      console.error('‚ùå Error in forgot password:', err);
      
      // Manejo espec√≠fico de errores de conexi√≥n
      if (err.message === 'Failed to fetch' || err.message.includes('Network Error')) {
        setError('üîß Servicio temporalmente no disponible.\n\n' +
                'El sistema de recuperaci√≥n est√° siendo actualizado.\n' +
                'Por favor, int√©ntalo nuevamente en unos minutos o contacta al administrador.\n\n' +
                'üìß Email de contacto: baconfort.centro@gmail.com\n' +
                'üì± WhatsApp: +54 11 3002-1074');
      } else {
        setError(err.message || 'Error al enviar solicitud de recuperaci√≥n');
      }
    } finally {
      console.log('üèÅ Request completed, setting loading=false');
      setLoading(false);
    }
  };

  const handleClose = () => {
    console.log('üö™ HANDLECLOSE: Starting close process');
    console.log('üîÑ HANDLECLOSE: Resetting form state');
    setEmail('');
    setMessage('');
    setError('');
    setStep('email');
    console.log('üîÑ HANDLECLOSE: Calling onClose callback');
    onClose();
    console.log('‚úÖ HANDLECLOSE: Modal should be closed now');
  };

  if (!isOpen) return null;

  return (
    <div 
      className="forgot-password-overlay"
      style={{
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: 'rgba(0, 0, 0, 0.5)',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        zIndex: 9999
      }}
      onClick={(e) => {
        // Si se hace click en el overlay (fondo), cerrar el modal
        if (e.target === e.currentTarget) {
          console.log('üî≤ OVERLAY: Background clicked, closing modal');
          handleClose();
        }
      }}
    >
      <div 
        className="forgot-password-modal"
        style={{
          backgroundColor: 'white',
          borderRadius: '12px',
          padding: '20px',
          minWidth: '400px',
          maxWidth: '500px',
          maxHeight: '80vh',
          overflow: 'auto',
          position: 'relative',
          zIndex: 10000
        }}
        onClick={(e) => {
          // Prevenir que clicks en el modal cierren el overlay
          e.stopPropagation();
        }}
      >
        <div 
          className="forgot-password-header"
          style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginBottom: '20px',
            paddingBottom: '10px',
            borderBottom: '1px solid #eee'
          }}
        >
          <h2 style={{margin: 0, color: '#333'}}>Recuperar Contrase√±a</h2>
          <button 
            className="close-button" 
            onClick={(e) => {
              console.log('‚ùå HEADER CLOSE: X button clicked');
              e.preventDefault();
              e.stopPropagation();
              handleClose();
            }}
            style={{
              background: 'none',
              border: 'none',
              fontSize: '24px',
              cursor: 'pointer',
              color: '#666',
              padding: '5px 10px',
              position: 'relative',
              zIndex: 10001,
              pointerEvents: 'auto'
            }}
          >
            √ó
          </button>
        </div>

        <div className="forgot-password-content">
          {step === 'email' && (
            <form onSubmit={handleSubmit}>
              <p className="forgot-password-description">
                Ingresa tu email y te enviaremos instrucciones para resetear tu contrase√±a.
              </p>

              <div className="form-group">
                <label htmlFor="email">Email</label>
                <input
                  type="email"
                  id="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  onKeyDown={(e) => {
                    console.log('‚å®Ô∏è Key pressed:', e.key);
                    if (e.key === 'Enter') {
                      console.log('üöÄ ENTER PRESSED - SUBMITTING FORM');
                      e.preventDefault();
                      handleSubmit(e);
                    }
                  }}
                  placeholder="tu@email.com"
                  required
                  disabled={loading}
                />
              </div>

              {error && (
                <div className="error-message">
                  {error}
                </div>
              )}

              <div className="form-actions">
                <button 
                  type="button" 
                  className="btn-secondary"
                  onClick={handleClose}
                  disabled={loading}
                >
                  Cancelar
                </button>
                <button 
                  type="button"
                  className="btn-primary"
                  disabled={loading}
                  onClick={(e) => {
                    console.log('üî• BUTTON CLICKED DIRECTLY!');
                    console.log('üîç Event target:', e.target);
                    e.preventDefault();
                    e.stopPropagation();
                    handleSubmit(e); // Llamada directa a handleSubmit
                  }}
                  onMouseDown={(e) => {
                    console.log('üñ±Ô∏è BUTTON MOUSE DOWN');
                  }}
                  onTouchStart={(e) => {
                    console.log('üëÜ BUTTON TOUCH START');
                  }}
                  onDoubleClick={(e) => {
                    console.log('üî•üî• DOUBLE CLICK - FORCING SUBMIT!');
                    e.preventDefault();
                    handleSubmit(e);
                  }}
                >
                  {loading ? 'Enviando...' : 'Enviar Instrucciones'}
                </button>
              </div>
            </form>
          )}

          {step === 'success' && (
            <div className="success-step">
              <div className="success-icon">‚úÖ</div>
              <h3 style={{color: '#27ae60', marginBottom: '15px'}}>¬°Email Enviado!</h3>
              <div className="success-message">
                <p style={{marginBottom: '15px', fontWeight: 'bold', fontSize: '16px'}}>
                  Se ha enviado un email con las instrucciones para resetear tu contrase√±a.
                </p>
                <div style={{
                  backgroundColor: '#e8f5e8', 
                  padding: '15px', 
                  borderRadius: '8px', 
                  marginBottom: '15px',
                  border: '1px solid #27ae60'
                }}>
                  <p style={{margin: '0', fontSize: '14px'}}>
                    üìß <strong>Revisa tu bandeja de entrada</strong><br/>
                    üìÅ <strong>Tambi√©n revisa la carpeta de spam</strong><br/>
                    ‚è∞ <strong>El enlace expira en 1 hora</strong>
                  </p>
                </div>
                {message && (
                  <p style={{fontSize: '14px', color: '#666'}}>
                    {message}
                  </p>
                )}
              </div>
              <div className="form-actions">
                <button 
                  className="btn-primary"
                  onClick={(e) => {
                    console.log('üîÑ SUCCESS SCREEN: Entendido clicked!');
                    console.log('üîç SUCCESS SCREEN: Event target:', e.target);
                    e.preventDefault();
                    e.stopPropagation();
                    handleClose();
                  }}
                  onMouseDown={(e) => {
                    console.log('üñ±Ô∏è SUCCESS SCREEN: Mouse down on Entendido');
                  }}
                  style={{
                    backgroundColor: '#27ae60', 
                    width: '100%', 
                    padding: '12px', 
                    fontSize: '16px', 
                    fontWeight: 'bold',
                    border: 'none',
                    borderRadius: '8px',
                    color: 'white',
                    cursor: 'pointer',
                    position: 'relative',
                    zIndex: 10001,
                    pointerEvents: 'auto'
                  }}
                >
                  Entendido
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ForgotPassword;
